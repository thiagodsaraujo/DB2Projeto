CREATE OR REPLACE FUNCTION funcaoVenda()
RETURNS TRIGGER AS $$
BEGIN
	RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE OR REPLACE TRIGGER tgvenda
BEFORE INSERT OR UPDATE OR DELETE ON venda
FOR EACH ROW
EXECUTE PROCEDURE funcaoVenda();


CREATE OR REPLACE FUNCTION InsertVenda()
RETURNS TRIGGER AS $$
DECLARE qtdVenda INT;
DECLARE cod INT;
DECLARE qtdProduto INT;

BEGIN

	SELECT p.quantidade
	INTO qtdProduto
	FROM produto p
	WHERE p.codigoproduto = new.codigoprod;


	IF NEW.qntdvendida > qtdProduto THEN
		RAISE EXCEPTION 'Estoque Insuficiente';
	ELSE
		UPDATE produto
		SET quantidade = quantidade - new.qntdvendida
		WHERE codigoproduto = NEW.codigoprod;
	END IF;
	RETURN NEW;
END;
$$ LANGUAGE plpgsql;


CREATE OR REPLACE TRIGGER trgInserVenda
AFTER INSERT ON venda
FOR EACH ROW
EXECUTE PROCEDURE InsertVenda();

CREATE OR REPLACE FUNCTION DeleteVenda()
RETURNS TRIGGER AS $$

DECLARE qtdVenda INT;
DECLARE cod INT;
DECLARE qtdProduto INT;

BEGIN
	UPDATE produto
	SET quantidade = qtdProduto + OLD.quantidade
	WHERE codigoproduto = OLD.codigoprod;

	RETURN OLD;
END;
$$ LANGUAGE plpgsql;


CREATE OR REPLACE TRIGGER trgDeleteVenda
AFTER DELETE ON venda
FOR EACH ROW
EXECUTE PROCEDURE DeleteVenda();

